// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Palm.Infrastructure;

#nullable disable

namespace Palm.Migrations
{
    [DbContext(typeof(UserDataContext))]
    [Migration("20221205153740_UserOne")]
    partial class UserOne
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Palm.Models.Sessions.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("QuestionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("QuestionId1")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuestionId1");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("Palm.Models.Sessions.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SessionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("Palm.Models.Sessions.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("HostId")
                        .HasColumnType("uuid");

                    b.Property<string>("ShortId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("TeacherId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("TeacherId1")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TeacherId1");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("Palm.Models.Users.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Palm.Models.Users.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Palm.Models.Users.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SessionStudent", b =>
                {
                    b.Property<Guid>("HistorySessionsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StudentsId")
                        .HasColumnType("uuid");

                    b.HasKey("HistorySessionsId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("SessionStudent");
                });

            modelBuilder.Entity("Palm.Models.Sessions.Answer", b =>
                {
                    b.HasOne("Palm.Models.Sessions.Question", null)
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId");

                    b.HasOne("Palm.Models.Sessions.Question", null)
                        .WithMany("CorrectAnswers")
                        .HasForeignKey("QuestionId1");
                });

            modelBuilder.Entity("Palm.Models.Sessions.Question", b =>
                {
                    b.HasOne("Palm.Models.Sessions.Session", null)
                        .WithMany("Questions")
                        .HasForeignKey("SessionId");
                });

            modelBuilder.Entity("Palm.Models.Sessions.Session", b =>
                {
                    b.HasOne("Palm.Models.Users.Teacher", null)
                        .WithMany("ActiveSessions")
                        .HasForeignKey("TeacherId");

                    b.HasOne("Palm.Models.Users.Teacher", null)
                        .WithMany("InactiveSessions")
                        .HasForeignKey("TeacherId1");
                });

            modelBuilder.Entity("SessionStudent", b =>
                {
                    b.HasOne("Palm.Models.Sessions.Session", null)
                        .WithMany()
                        .HasForeignKey("HistorySessionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Palm.Models.Users.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Palm.Models.Sessions.Question", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("CorrectAnswers");
                });

            modelBuilder.Entity("Palm.Models.Sessions.Session", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Palm.Models.Users.Teacher", b =>
                {
                    b.Navigation("ActiveSessions");

                    b.Navigation("InactiveSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
